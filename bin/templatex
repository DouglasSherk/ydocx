#!/usr/bin/env ruby
# coding: utf-8

if $0 == __FILE__
  require 'pathname'
  root = Pathname.new(__FILE__).realpath.parent.parent
  $:.unshift root.join('lib')
end

require 'ydocx/document'

test_data = {
  'name' => 'Hanson Wang',
  'company' => 'SciGit',
  'accountNumber' => '1234567890',
  'address' => '123 Fake Street',
  'cityAndProvince' => 'Toronto, ON',
  'email' => 'test@test.com',
  'phone' => '123-456-7890',
  'website' => 'www.scigit.com',
  'clientContacts' => [
    {
      'name' => 'Doug Sherk',
      'email' => 'doug@sherk.me',
      'checkboxFields' => {'a' => true, 'b' => false, 'c' => true}
    },
    {
      'name' => 'Eric Ho',
      'email' => 'eric@scigit.com',
      'checkboxFields' => {'asdf' => true, 'ghij' => true, 'c' => false}
    }
  ]
}

argv = ARGV.dup
if !argv[0].nil?
  YDocx::Document.fill_template(argv[0], test_data, argv[1] || (File.basename(argv[0], '.docx') + '.out.docx'))
  puts 'Successfully filled template with data.'
else
  puts 'usage: templatex template_file output_file'
end
